export const createRegisterEncoder = (encoderBrokerRegistry, encoderIds, wrap) => async (encoderId, port) => {
    const encoderBroker = wrap(port);
    const regex = await encoderBroker.characterize();
    const regexAsString = regex.toString();
    if (encoderBrokerRegistry.has(regexAsString)) {
        throw new Error('There is already an encoder stored which handles exactly the same mime types.');
    }
    if (encoderIds.has(encoderId)) {
        throw new Error(`There is already an encoder registered with an id called "${encoderId}".`);
    }
    encoderBrokerRegistry.set(regexAsString, [regex, encoderBroker]);
    encoderIds.set(encoderId, regexAsString);
    return regex;
};
//# sourceMappingURL=register-encoder.js.map