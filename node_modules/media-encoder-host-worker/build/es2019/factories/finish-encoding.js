export const createFinishEncoding = (closePort, removeEncoderInstance) => {
    return (encoderInstanceId) => {
        const [encoderBroker, port, isRecording, sampleRate] = removeEncoderInstance(encoderInstanceId);
        if (!isRecording) {
            return encoderBroker.encode(encoderInstanceId, null);
        }
        return new Promise((resolve) => {
            port.onmessage = ({ data }) => {
                if (data.length === 0) {
                    closePort(port);
                    resolve(encoderBroker.encode(encoderInstanceId, null));
                }
                else {
                    encoderBroker.record(encoderInstanceId, sampleRate, data);
                }
            };
        });
    };
};
//# sourceMappingURL=finish-encoding.js.map